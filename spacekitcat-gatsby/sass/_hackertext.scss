// The pseudo elements can climb the DOM, hence the use of the word 'isolation'
.hackertext-isolation-container {
    /* relative will contain the hackertext 'before' 
         pseudo element (absolute positioning). It
         would otherwise continue to climb the DOM
         heirarchy */
    position: relative;
    width: 100%;
    z-index: -3;
    height: auto;
  }
  
  .hackertext-background {
    position: absolute;
    top: 0px;
    left: 0px;
    right: 0px;
    z-index: -2;
    height: 200px;
  }
  
  .hackertext {
    color: $green;
    background-color: rgba($black, 0.7);
    font-family: monospace;
    height: auto;
    position: absolute;
    user-select: none;
    word-break: break-all;
    top: 0px;
    left: 0px;
    right: 0px;
    z-index: 1;
  }
  
  @keyframes hts-anim {
    @for $i from 1 through 90 {
      #{$i * 1%} { content: "Memory Test  : #{$i * 1622339} ..."; }
    };
  }
  
  .hackertext::after {
    content: "Memory Test  : #{90 * 1622339} OK";
    animation: hts-anim 0.25s alternate both running;
    background-color: rgba($black, 0.7);
    bottom: 0;
    left: 0;
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    z-index: 2;
  }
