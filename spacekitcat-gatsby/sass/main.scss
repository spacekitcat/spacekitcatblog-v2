$gel-grid-enable--markup-output: true;
$gel-type-enable--markup-output: true;
$gel-type-enable--font-family: true;

// BBC imports
@import 'node_modules/gel-sass-tools/sass-tools';
@import 'node_modules/sass-mq/mq';
@import 'node_modules/gel-grid/grid';
@import 'node_modules/gel-typography/typography';

// Google imports
@import url('https://fonts.googleapis.com/css?family=Monoton|VT323|Source+Code+Pro');

$black: #000;
$green: #009f00;
$offblack: #000f00;
$white: #c4c4c4;
$orange: rgb(252, 79, 36);
$orange-contrast: rgb(250, 250, 33);

/* apply a natural box layout model to all elements, but allowing components to change */
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  background-color: $black;
  color: $green;
  font-family: 'VT323', monospace;
  margin: 0;
  padding: 0;
}

.header {
  color: $offblack;
}

// The pseudo elements can climb the DOM, hence the use of the word 'isolation'
.hackertext-isolation-container {
  /* relative will contain the hackertext 'before' 
       pseudo element (absolute positioning). It
       would otherwise continue to climb the DOM
       heirarchy */
  position: relative;
  width: 100%;
  z-index: -3;
  height: auto;
}

.hackertext-background {
  position: absolute;
  top: 0px;
  left: 0px;
  right: 0px;
  z-index: -2;
  height: 200px;
}

.hackertext {
  color: $green;
  background-color: rgba($black, 0.7);
  font-family: monospace;
  height: auto;
  position: absolute;
  user-select: none;
  word-break: break-all;
  top: 0px;
  left: 0px;
  right: 0px;
  z-index: 1;
}

@keyframes hts-anim {
  0% {top: -$gel-spacing-unit; left: -$gel-spacing-unit; display: inline;}
  50% {top: 20px; left: 0; color:  purple; display: none;}
  100% {top: 0px; left: 0; color:  rgba(green, 0.1f); display: none;}
}

.hackertext::after {
  content: "Memory Test  :    786432K OK";
  animation: hts-anim 2s alternate both running;
  background-color: rgba($black, 0.7);
  bottom: 0;
  left: 0;
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  z-index: 2;
}

.header {
  margin-top: 0;
  padding-top: 0;
}

.sitename {
  position: relative;
  color: $green;
}

@keyframes cool {
  from {top: $gel-spacing-unit; left: $gel-spacing-unit;}
  to {top: 0px; left:0px; color: blue;}
}

@keyframes cool2 {
  from {top: -$gel-spacing-unit; left: -$gel-spacing-unit; display: inline;}
  to {top: 0px; left: 0; color: red; display: none;}
}

.sitename::before {
  position: absolute;
  color: $green;
  animation: cool 0.1s running;
  animation-iteration-count: 1;
  content: 'SPACEKITCAT';
  float: left;
  top: 0px;
  left: 0px;
  position: absolute;
  border-color: rgba($orange, 0.2);
  border-style: none none none none;
  border-width: 1px;
}

.sitename::after {
  position: absolute;
  color: $green;
  animation: cool2 0.1s running;
  animation-iteration-count: 1;
  content: 'SPACEKITCAT';
  float: left;
  top: 0px;
  left: 0px;
  border-color: rgba($orange, 0.2);
  border-style: none none none none;
  border-width: 1px;
}

.questionboxwallrack {
  @include gel-layout;
}

.column-wrapper {
  display: flex;
  flex-direction: column;
}

.content {
  @include gel-typography('body-copy');
  margin-right: triple($gel-spacing-unit);

  color: $orange;
}

.questionbox {
  @include gel-layout-item;
  @include gel-columns(12);

  @include mq($from: gel-bp-m) {
    @include gel-columns(1/2);
  }

  @include mq($from: gel-bp-l) {
    @include gel-columns(1/4);
  }

  position: relative;
  color: $orange;
  text-align: center;
  animation: tellme 1s infinite;
  animation-iteration-count: 1;
  vertical-align: middle;
  margin-bottom: double($gel-spacing-unit);
}

.questionboxcontent {
  background-color: rgba($green, 0.1);
  height: 100px;

  > a {
    display: block;
    @include gel-typography('trafalgar-bold');
    color: $orange;
    line-height: 22px;
    letter-spacing: 2px;
    font-family: 'VT323', monospace;
    font-size: 2px;
    padding-bottom: 0;
    margin: 0;
    padding-top: 32px;
    text-decoration: none;

    &:hover {
      color: $orange-contrast;
    }

    &:active {
      color: $orange-contrast;
    }
  }
}

.footer-item {
  position: relative;
  background-color: rgba(0, 0, 0, 0.2);

  color: $orange;
  margin-top: $gel-spacing-unit;
}

.footer-item a {
  text-decoration: none;
  color: $orange;
}

@keyframes tellme {
  from { color: $orange-contrast; transform: rotate3d(0, 1, 1, -3.142rad);}
  to { color: $orange; }
}

.item-meta {
  border-top: solid;
  border-width: 1px;
  font-size: 26px;
  letter-spacing: 2px;
  font-family: 'VT323', monospace;
}

.item-meta-item,
.item-meta-item--red {
  vertical-align: middle;
}

.item-label img {
  background-color: rgba($green, 0.1);

  width: 100%;
}

.footer-item a {
  text-decoration: none;
  color: $orange-contrast;
  transition-timing-function: ease();
  transition-duration: 1s;
  -webkit-transition-duration: 100ms;
  -moz-transition-duration: 100ms;
  -o-transition-delay-duration: 100ms;
  letter-spacing: 3px;
}

.footer-item a:active {
  text-decoration: none;
  color: $orange-contrast;
}

.footer-item a:visited {
  text-decoration: none;
  color: $orange;
}

.footer-item a:hover {
  text-decoration: none;
  color: $orange-contrast;
  transition-timing-function: ease();
  transition-duration: 0.5s;
  -webkit-transition-duration: 100ms;
  -moz-transition-duration: 100ms;
  -o-transition-delay-duration: 100ms;
  text-transform: uppercase;
  letter-spacing: 1.1 * $gel-spacing-unit;
}

.list {
  border-color: rgba($orange, 0.6);
  padding-bottom: triple($gel-spacing-unit);
}
.list h2 {
  color: $white;
}
